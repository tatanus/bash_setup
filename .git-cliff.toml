# git-cliff configuration for bash_setup

[git]
conventional_commits = true
filter_unconventional = true
tag_pattern = "v[0-9].*"

[changelog]
header = """
# Changelog
All notable changes to this project will be documented in this file.
"""
body = """
{% if version %}## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}{% else %}## [Unreleased]{% endif %}
{% for group, commits in commits | group_by(attribute="group") %}
### {{ group | upper_first }}
{% for commit in commits -%}
- {{ commit.message | split(pat="\\n") | first | trim }}{% if commit.breaking %} **(BREAKING)**{% endif %}{% if commit.scope %} ({{ commit.scope }}){% endif %}
{% endfor %}
{% endfor %}
"""
footer = ""

# Map conventional commit types to Keep a Changelog-style groups
[[commit_parsers]]
message = '^feat(\(.*\))?:'
group = 'Added'

[[commit_parsers]]
message = '^fix(\(.*\))?:'
group = 'Fixed'

[[commit_parsers]]
message = '^refactor(\(.*\))?:'
group = 'Changed'

[[commit_parsers]]
message = '^perf(\(.*\))?:'
group = 'Performance'

[[commit_parsers]]
message = '^docs(\(.*\))?:'
group = 'Docs'

[[commit_parsers]]
message = '^build(\(.*\))?:'
group = 'Build'

[[commit_parsers]]
message = '^ci(\(.*\))?:'
group = 'CI'

[[commit_parsers]]
message = '^chore(\(.*\))?:'
group = 'Chore'

[[commit_parsers]]
message = '^revert(\(.*\))?:'
group = 'Reverted'

# Fallback: put anything else under "Misc"
[[commit_parsers]]
message = '.*'
group = 'Misc'