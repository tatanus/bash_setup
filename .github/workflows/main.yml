name: Bash Project CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint Bash Scripts with ShellCheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install ShellCheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Run ShellCheck
        run: |
          set -eo pipefail
          # Lint all .sh files, excluding the .git dir
          find . -name "*.sh" ! -path "./.git/*" -print0 \
            | xargs -0 shellcheck --shell=bash --external-sources -x \
              --severity=style \
              --exclude=SC1090,SC1091,SC2034,SC2181

  format:
    name: Check Formatting with shfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install shfmt
        run: |
          sudo apt-get update
          sudo apt-get install -y shfmt

      - name: Run shfmt
        run: |
          # Keep the project's known-good formatting preferences
          find . -type f -name "*.sh" -print0 \
            | xargs -0 shfmt -i 4 -ci -bn -sr -kp -ln bash -d
          # Flags:
          # -i 4  indent width
          # -ci   indent case blocks
          # -bn   keep 'do/then' on same line
          # -sr   simplify redirects
          # -kp   preserve padding
          # -ln   bash dialect
          # -d    diff mode (fail on differences)

  validate_permissions:
    name: Validate File Permissions and Shebangs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Ensure Executable Permissions
        run: |
          # Make all .sh files executable; adjust if you only want this in dev
          find . -name "*.sh" -exec chmod +x {} \;

      - name: Validate Shebangs
        shell: bash
        run: |
          set -euo pipefail
          # Exclude known third-party or special files
          missing_shebangs=$(
            find . -name "*.sh" \
              ! -path "./.git/*" \
              ! -path "./lib/common_core/*" \
              ! -path "./dotfiles/bash-preexec.sh" \
              -exec sh -c 'head -n 1 "$1" | grep -q "^#!" || echo "$1"' _ {} \;
          )
          if [[ -n "${missing_shebangs}" ]]; then
            echo "The following files are missing a shebang:"
            echo "${missing_shebangs}"
            exit 1
          fi

  tests:
    needs: [lint, format]
    name: Run BATS Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install bats-core
        run: |
          git clone --depth 1 https://github.com/bats-core/bats-core.git
          sudo ./bats-core/install.sh /usr/local

      - name: Run tests (BATS)
        run: |
          if compgen -G "tests/**/*.bats" > /dev/null || compgen -G "tests/*.bats" > /dev/null; then
            bats -r tests
          else
            echo "No BATS tests found."
          fi

  secret_scan:
    needs: [lint, format]
    name: Secret Scan (gitleaks)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          # gitleaks.toml is at repo root; change path if you relocate it
          config: gitleaks.toml

